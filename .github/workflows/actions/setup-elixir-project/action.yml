name: Setup Elixir Project
description: >-
  Install Erlang/OTP and Elixir (and optionally Hex and Rebar); fetch, cache,
  and compile dependencies; and build and cache the app.
inputs:
  elixir-version:
    description: Elixir version to install. Reads from `.tool-versions` if unset.
  otp-version:
    description: Erlang/OTP version to install. Reads from `.tool-versions` if unset.
  install-hex:
    description: Install Hex using `mix local.hex`.
    default: true
  install-rebar:
    description: Install Rebar using `mix local.rebar`.
    default: true
outputs:
  otp-version:
    description: Exact Erlang/OTP version installed.
    value: ${{ steps.setup-beam.outputs.otp-version }}
  elixir-version:
    description: Exact Elixir version installed.
    value: ${{ steps.setup-beam.outputs.elixir-version }}
runs:
  using: composite
  steps:
    - name: Set Elixir version
      id: set-elixir-version
      run: |
        elixir_version="${{ inputs.elixir-version }}"
        if [ elixir_version == "" ]; then elixir_version="$(grep -oP "^elixir\s\K(.+)$" .tool-versions)"; fi
        echo "elixir-version=$elixir_version" >> $GITHUB_OUTPUT
      shell: bash
    - name: Set Erlang/OTP version
      id: set-otp-version
      run: |
        otp_version="${{ inputs.otp-version }}"
        if [ otp_version == "" ]; then otp_version="$(grep -oP "^erlang\s\K(.+)$" .tool-versions)"; fi
        echo "otp-version=$otp_version" >> $GITHUB_OUTPUT
      shell: bash
    - name: Install Erlang/OTP and Elixir
      uses: erlef/setup-beam@v1
      id: setup-beam
      with:
        elixir-version: ${{ steps.set-elixir-version.outputs.elixir-version }}
        otp-version: ${{ steps.set-otp-version.outputs.otp-version }}
        version-type: strict
    - name: Install Hex package manager
      if: inputs.install-hex == 'true'
      run: mix local.hex --force
      shell: bash
    - name: Install Rebar build tool
      if: inputs.install-rebar == 'true'
      run: mix local.rebar --force
      shell: bash
    - name: Get out-of-date project dependencies
      run: mix deps.get
      shell: bash
    - name: Compile project dependencies
      run: mix loadpaths
      shell: bash
    - name: Compile application
      run: mix compile
      shell: bash
